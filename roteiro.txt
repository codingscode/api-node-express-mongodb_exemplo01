

na pasta backend:
   npm init
   npm i nodemon
   npm start
   ```
   > backend@1.0.0 start
   > nodemon app.js

   [nodemon] 2.0.21
   [nodemon] to restart at any time, enter `rs`
   [nodemon] watching path(s): *.*
   [nodemon] watching extensions: js,mjs,json
   [nodemon] starting `node app.js`
   olá mundo
   [nodemon] clean exit - waiting for changes before restart

   ```
   npm i express
   npm i mongoose


ver http://localhost:5000/api

https://www.mongodb.com/


mongodb+srv://admin:<password>@cluster0.zgjyqfq.mongodb.net/?retryWrites=true&w=majority


http://localhost:5000/api/user



No Postman
  usar GET para http://localhost:5000/api/user e clicar em SEND 
  ir em -> Body -> Pretty:
  """
  {
    "users": []
  }
  """


  usar POST para http://localhost:5000/api/user/signup 
    em Body -> raw (como json) digitar
     {
        "name": "Nick",
        "email": "nick@gmail.com",
        "password": "111111"
     }

    mais em baixo em Body -> Pretty aparece:
       {
          "user": {
              "name": "Nick",
              "email": "nick@gmail.com",
              "password": "111111",
              "_id": "641b1110372e4e78e2e84eba",
              "__v": 0
          }
       }

  usar POST para http://localhost:5000/api/user/signup 
    em Body -> raw (como json) digitar
     {
        "name": "Larissa",
        "email": "lala@gmail.com",
        "password": "9991234"
     }

     mais em baixo em Body -> Pretty aparece:
       
       {
           "user": {
               "name": "Larissa",
               "email": "lala@gmail.com",
               "password": "$2a$10$1JC0HF5SkhpIdgnA1gVts./humjA/F286b2VdOge76q/9aLrBEBQG",
               "_id": "641b14ba79428e0bb5695848",
               "__v": 0
           }
       }

  usar POST para http://localhost:5000/api/user/login  clicar em SEND
    em Body -> raw (como json) digitar
     {
        "email": "ferdinand@gmail.com",
        "password": "8881234"
     }

     mais em baixo em Body -> Pretty aparece:
     {
        "message": "Não se pode encontrar Usuário por este email!"
     }

     **** se:
     {
        "email": "lala@gmail.com",
        "password": "9991234"
     }
     aparece:
     {
        "message": "Login com sucesso!"
     }


  usar GET para http://localhost:5000/api/blog/  clicar em SEND   [testar novamente]
  ir em -> Body -> Pretty: aparece
  """
   {
      "blogs": []
   }
  """
   {
       "blogs": [
           {
               "_id": "641cf7a45015903596823957",
               "title": "Blog atualizado",
               "description": "Isto é meu primeiro Blog atualizado",
               "image": "xxxx",
               "user": "12345",
               "__v": 0
           }
       ]
   }
  """
   {
       "blogs": [
           {
               "_id": "641cf7a45015903596823957",
               "title": "Blog atualizado",
               "description": "Isto é meu primeiro Blog atualizado",
               "image": "xxxx",
               "user": "12345",
               "__v": 0
           },
           {
               "_id": "641da7112efd421b89f946f4",
               "title": "Meu segundo novo Blog",
               "description": "Isto é meu segundo Blog",
               "image": "xxxx",
               "user": "12345",
               "__v": 0
           }
       ]
   }

  """

    
  usar POST para http://localhost:5000/api/blog/add  clicar em SEND 
    em Body -> raw (como json) digitar
   {
      "title": "Meu novo Blog",
      "description": "Isto é meu primeiro Blog",
      "image": "xxxx",
      "user": "12345"
   }
     mais em baixo em Body -> Pretty aparece:
    {
        "blog": {
            "title": "Meu novo Blog",
            "description": "Isto é meu primeiro Blog",
            "image": "xxxx",
            "user": "12345",
            "_id": "641cf7a45015903596823957",
            "__v": 0
        }
    }
  usar PUT para http://localhost:5000/api/blog/add  clicar em SEND
    em Body -> raw (como json) digitar
   {
      "title": "Blog atualizado",
      "description": "Isto é meu primeiro Blog atualizado"
   }
     mais em baixo em Body -> Pretty aparece:
    <!DOCTYPE html>
    <html lang="en">
    <head>
    <meta charset="utf-8">
    <title>Error</title>
    </head>
    <body>
    <pre>SyntaxError: Unexpected token } in JSON at position 92<br> &nbsp; &nbsp;at JSON.parse (&lt;anonymous&gt;)<br> &nbsp; &nbsp;at parse (/home/misterhp/Programacao/FeitosAParte/004/backend/node_modules/body-parser/lib/types/json.js:89:19)<br> &nbsp; &nbsp;at /home/misterhp/Programacao/FeitosAParte/004/backend/node_modules/body-parser/lib/read.js:128:18<br> &nbsp; &nbsp;at AsyncResource.runInAsyncScope (node:async_hooks:203:9)<br> &nbsp; &nbsp;at invokeCallback (/home/misterhp/Programacao/FeitosAParte/004/backend/node_modules/raw-body/index.js:231:16)<br> &nbsp; &nbsp;at done (/home/misterhp/Programacao/FeitosAParte/004/backend/node_modules/raw-body/index.js:220:7)<br> &nbsp; &nbsp;at IncomingMessage.onEnd (/home/misterhp/Programacao/FeitosAParte/004/backend/node_modules/raw-body/index.js:280:7)<br> &nbsp; &nbsp;at IncomingMessage.emit (node:events:525:35)<br> &nbsp; &nbsp;at endReadableNT (node:internal/streams/readable:1358:12)<br> &nbsp; &nbsp;at processTicksAndRejections (node:internal/process/task_queues:83:21)</pre>
    </body>
    </html>

  usar PUT para http://localhost:5000/api/blog/update/641cf7a45015903596823957  clicar em SEND
   {
      "title": "Blog atualizado",
      "description": "Isto é meu primeiro Blog atualizado"
   }
     mais em baixo em Body -> Pretty aparece:
   {
       "blog": {
           "_id": "641cf7a45015903596823957",
           "title": "Meu novo Blog",
           "description": "Isto é meu primeiro Blog",
           "image": "xxxx",
           "user": "12345",
           "__v": 0
       }
   }


  usar POST para http://localhost:5000/api/blog/add  clicar em SEND 
    em Body -> raw (como json) digitar
   {
      "title": "Meu segundo novo Blog",
      "description": "Isto é meu segundo Blog",
      "image": "xxxx",
      "user": "12345"
   }
     mais em baixo em Body -> Pretty aparece:
       {
           "blog": {
               "title": "Meu segundo novo Blog",
               "description": "Isto é meu segundo Blog",
               "image": "xxxx",
               "user": "12345",
               "_id": "641da7112efd421b89f946f4",
               "__v": 0
           }
       }


  usar GET para http://localhost:5000/api/blog/641da7112efd421b89f946f4  clicar em SEND
    em Params:
   
    em Body -> Pretty:
      {
          "blog": {
              "_id": "641da7112efd421b89f946f4",
              "title": "Meu segundo novo Blog",
              "description": "Isto é meu segundo Blog",
              "image": "xxxx",
              "user": "12345",
              "__v": 0
          }
      }


  usar DELETE para http://localhost:5000/api/blog/641da7112efd421b89f946f4  clicar em SEND
    em Params:
   
    em Body -> Pretty:
      {
          "message": "Deletado com sucesso!"
      }


  usar GET para http://localhost:5000/api/blog/641da7112efd421b89f946f4  clicar em SEND
    em Params:
   
    em Body -> Pretty:
      {
          "message": "Nenhum Blog encontrado"
      }


  usar POST para http://localhost:5000/api/user/signup  clicar em SEND
    em Body -> raw Json:
     {
        "name": "Paulo",
        "email": "paulo@gmail.com",
        "password": "987654"
     }
  
    em Body -> Pretty:
     {
         "user": {
             "name": "Paulo",
             "email": "paulo@gmail.com",
             "password": "$2a$10$Tq/jjrakRx8aT04PdoGUqevFikcFA3UqtkQCrmZDz8WlHODOgDlDq",
             "blogs": [],
             "_id": "641db1a07930744d11aeb1d0",
             "__v": 0
         }
     }





























http://localhost:5000/api/blog/add




http://localhost:5000/api/user/signup


npm i bcryptjs






































